# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when there is a push to the main branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build and Deploy to IKS

on:
  push:
    branches:
      - main

# Environment variables available to all jobs and steps in this workflow
env:
#   GITHUB_SHA: ${{ github.sha }}
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: us-south
#   ICR_NAMESPACE: ${{ secrets.ICR_NAMESPACE }}
#   REGISTRY_HOSTNAME: us.icr.io
#   IMAGE_NAME: iks-test
  IKS_CLUSTER: modelmesh-benchmark-tedchang-2
#   DEPLOYMENT_NAME: iks-test
#   PORT: 5001

jobs:
  run-performance-test:
    name: Test
    runs-on: ubuntu-latest
    environment: production
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Download and Install IBM Cloud CLI
    - name: Install IBM Cloud CLI
      run: |
        curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
        ibmcloud --version
        ibmcloud config --check-version=false
        ibmcloud plugin install -f kubernetes-service

    # Authenticate with IBM Cloud CLI
    - name: Authenticate with IBM Cloud CLI
      run: |
        ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g default
        ibmcloud cr region-set "${IBM_CLOUD_REGION}"
        ibmcloud cr login

    # Deploy the Docker image to the IKS cluster
    - name: Run Test
      run: |
        ibmcloud ks cluster config --cluster $IKS_CLUSTER
        ibmcloud ks cluster config --cluster c5fu4nod09lqq49uprh0
        kubectl config set-context --current --namespace=modelmesh-serving
        cd kserve-perf; kubectl apply -f howitzer_k6_test-2.yaml
        kubectl get job perf-test-job
